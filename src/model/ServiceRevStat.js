/**
 * openapi for sibyl2 server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectRevInfo from './ObjectRevInfo';

/**
 * The ServiceRevStat model module.
 * @module model/ServiceRevStat
 * @version 1.0
 */
class ServiceRevStat {
    /**
     * Constructs a new <code>ServiceRevStat</code>.
     * @alias module:model/ServiceRevStat
     */
    constructor() { 
        
        ServiceRevStat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceRevStat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceRevStat} obj Optional instance to populate.
     * @return {module:model/ServiceRevStat} The populated <code>ServiceRevStat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceRevStat();

            if (data.hasOwnProperty('fileCount')) {
                obj['fileCount'] = ApiClient.convertToType(data['fileCount'], 'Number');
            }
            if (data.hasOwnProperty('functionCount')) {
                obj['functionCount'] = ApiClient.convertToType(data['functionCount'], 'Number');
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = ObjectRevInfo.constructFromObject(data['info']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceRevStat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceRevStat</code>.
     */
    static validateJSON(data) {
        // validate the optional field `info`
        if (data['info']) { // data not null
          ObjectRevInfo.validateJSON(data['info']);
        }

        return true;
    }


}



/**
 * @member {Number} fileCount
 */
ServiceRevStat.prototype['fileCount'] = undefined;

/**
 * @member {Number} functionCount
 */
ServiceRevStat.prototype['functionCount'] = undefined;

/**
 * @member {module:model/ObjectRevInfo} info
 */
ServiceRevStat.prototype['info'] = undefined;






export default ServiceRevStat;

