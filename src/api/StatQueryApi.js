/**
 * openapi for sibyl2 server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceRevStat from '../model/ServiceRevStat';

/**
* StatQuery service.
* @module api/StatQueryApi
* @version 1.0
*/
export default class StatQueryApi {

    /**
    * Constructs a new StatQueryApi. 
    * @alias module:api/StatQueryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1RevStatGet operation.
     * @callback module:api/StatQueryApi~apiV1RevStatGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceRevStat} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * rev stat
     * @param {String} repo repo
     * @param {String} rev rev
     * @param {module:api/StatQueryApi~apiV1RevStatGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceRevStat}
     */
    apiV1RevStatGet(repo, rev, callback) {
      let postBody = null;
      // verify the required parameter 'repo' is set
      if (repo === undefined || repo === null) {
        throw new Error("Missing the required parameter 'repo' when calling apiV1RevStatGet");
      }
      // verify the required parameter 'rev' is set
      if (rev === undefined || rev === null) {
        throw new Error("Missing the required parameter 'rev' when calling apiV1RevStatGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'repo': repo,
        'rev': rev
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceRevStat;
      return this.apiClient.callApi(
        '/api/v1/rev/stat', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
